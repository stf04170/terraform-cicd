name: terraform cicd test
# cicdを実行したブランチを指定
on:
  workflow_dispatch:
  push:
    branches:
      - develop
      - main

env:
  TF_VERSION: 1.5.1
  AWS_ROLE_ARN: ${{ secrets.AWS_IAM_ROLE_NAME  }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION  }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

# AWS認証（OIDC）で必要な権限
permissions:
  id-token: write
  contents: read

jobs:
  aws-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Terraform

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      # AWS認証（OIDC）
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ env.AWS_ROLE_ARN }}

      - name: pwd_ls
        run: |
          pwd
          ls

      # Terraform準備
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      ### フォーマット修正箇所をチェック
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      # 初期化
      - name: Terraform init
        run: terraform init
        

      # dry run 実行
      - name: Terraform Plan
        run: terraform plan -out=tfplan -var 'db_username=${{ env.DB_USER }}' -var 'db_password=${{ env.DB_PASSWORD }}'

      # deploy 実行
      - name: Terraform apply
        run: terraform apply -auto-approve -var 'db_username=${{ env.DB_USER }}' -var 'db_password=${{ env.DB_PASSWORD }}'
